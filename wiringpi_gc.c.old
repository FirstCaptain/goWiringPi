/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

/* This file should be compiled with 6c/8c.  */
#pragma dynimport _ _ "wiringpi.so"

#include "runtime.h"
#include "cgocall.h"

#ifdef _64BIT
#define SWIG_PARM_SIZE 8
#else
#define SWIG_PARM_SIZE 4
#endif

#pragma dynimport _wrap_wiringPiSetup _wrap_wiringPiSetup ""
extern void (*_wrap_wiringPiSetup)(void*);
static void (*x_wrap_wiringPiSetup)(void*) = _wrap_wiringPiSetup;

void
·WiringPiSetup(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiSetup, &p);
}



#pragma dynimport _wrap_wiringPiSetupSys _wrap_wiringPiSetupSys ""
extern void (*_wrap_wiringPiSetupSys)(void*);
static void (*x_wrap_wiringPiSetupSys)(void*) = _wrap_wiringPiSetupSys;

void
·WiringPiSetupSys(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiSetupSys, &p);
}



#pragma dynimport _wrap_wiringPiSetupGpio _wrap_wiringPiSetupGpio ""
extern void (*_wrap_wiringPiSetupGpio)(void*);
static void (*x_wrap_wiringPiSetupGpio)(void*) = _wrap_wiringPiSetupGpio;

void
·WiringPiSetupGpio(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiSetupGpio, &p);
}



#pragma dynimport _wrap_wiringPiSetupPhys _wrap_wiringPiSetupPhys ""
extern void (*_wrap_wiringPiSetupPhys)(void*);
static void (*x_wrap_wiringPiSetupPhys)(void*) = _wrap_wiringPiSetupPhys;

void
·WiringPiSetupPhys(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiSetupPhys, &p);
}



#pragma dynimport _wrap_piFaceSetup _wrap_piFaceSetup ""
extern void (*_wrap_piFaceSetup)(void*);
static void (*x_wrap_piFaceSetup)(void*) = _wrap_piFaceSetup;

void
·PiFaceSetup(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_piFaceSetup, &p);
}



#pragma dynimport _wrap_pinMode _wrap_pinMode ""
extern void (*_wrap_pinMode)(void*);
static void (*x_wrap_pinMode)(void*) = _wrap_pinMode;

void
·_swig_wrap_pinMode(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_pinMode, &p);
}



#pragma dynimport _wrap_pullUpDnControl _wrap_pullUpDnControl ""
extern void (*_wrap_pullUpDnControl)(void*);
static void (*x_wrap_pullUpDnControl)(void*) = _wrap_pullUpDnControl;

void
·_swig_wrap_pullUpDnControl(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_pullUpDnControl, &p);
}



#pragma dynimport _wrap_digitalRead _wrap_digitalRead ""
extern void (*_wrap_digitalRead)(void*);
static void (*x_wrap_digitalRead)(void*) = _wrap_digitalRead;

void
·DigitalRead(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_digitalRead, &p);
}



#pragma dynimport _wrap_digitalWrite _wrap_digitalWrite ""
extern void (*_wrap_digitalWrite)(void*);
static void (*x_wrap_digitalWrite)(void*) = _wrap_digitalWrite;

void
·_swig_wrap_digitalWrite(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_digitalWrite, &p);
}



#pragma dynimport _wrap_pwmWrite _wrap_pwmWrite ""
extern void (*_wrap_pwmWrite)(void*);
static void (*x_wrap_pwmWrite)(void*) = _wrap_pwmWrite;

void
·_swig_wrap_pwmWrite(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_pwmWrite, &p);
}



#pragma dynimport _wrap_analogRead _wrap_analogRead ""
extern void (*_wrap_analogRead)(void*);
static void (*x_wrap_analogRead)(void*) = _wrap_analogRead;

void
·AnalogRead(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_analogRead, &p);
}



#pragma dynimport _wrap_analogWrite _wrap_analogWrite ""
extern void (*_wrap_analogWrite)(void*);
static void (*x_wrap_analogWrite)(void*) = _wrap_analogWrite;

void
·_swig_wrap_analogWrite(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_analogWrite, &p);
}



#pragma dynimport _wrap_piBoardRev _wrap_piBoardRev ""
extern void (*_wrap_piBoardRev)(void*);
static void (*x_wrap_piBoardRev)(void*) = _wrap_piBoardRev;

void
·PiBoardRev(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_piBoardRev, &p);
}



#pragma dynimport _wrap_wpiPinToGpio _wrap_wpiPinToGpio ""
extern void (*_wrap_wpiPinToGpio)(void*);
static void (*x_wrap_wpiPinToGpio)(void*) = _wrap_wpiPinToGpio;

void
·WpiPinToGpio(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wpiPinToGpio, &p);
}



#pragma dynimport _wrap_setPadDrive _wrap_setPadDrive ""
extern void (*_wrap_setPadDrive)(void*);
static void (*x_wrap_setPadDrive)(void*) = _wrap_setPadDrive;

void
·_swig_wrap_setPadDrive(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_setPadDrive, &p);
}



#pragma dynimport _wrap_getAlt _wrap_getAlt ""
extern void (*_wrap_getAlt)(void*);
static void (*x_wrap_getAlt)(void*) = _wrap_getAlt;

void
·GetAlt(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_getAlt, &p);
}



#pragma dynimport _wrap_digitalWriteByte _wrap_digitalWriteByte ""
extern void (*_wrap_digitalWriteByte)(void*);
static void (*x_wrap_digitalWriteByte)(void*) = _wrap_digitalWriteByte;

void
·_swig_wrap_digitalWriteByte(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_digitalWriteByte, &p);
}



#pragma dynimport _wrap_pwmSetMode _wrap_pwmSetMode ""
extern void (*_wrap_pwmSetMode)(void*);
static void (*x_wrap_pwmSetMode)(void*) = _wrap_pwmSetMode;

void
·_swig_wrap_pwmSetMode(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_pwmSetMode, &p);
}



#pragma dynimport _wrap_pwmSetRange _wrap_pwmSetRange ""
extern void (*_wrap_pwmSetRange)(void*);
static void (*x_wrap_pwmSetRange)(void*) = _wrap_pwmSetRange;

void
·_swig_wrap_pwmSetRange(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_pwmSetRange, &p);
}



#pragma dynimport _wrap_pwmSetClock _wrap_pwmSetClock ""
extern void (*_wrap_pwmSetClock)(void*);
static void (*x_wrap_pwmSetClock)(void*) = _wrap_pwmSetClock;

void
·_swig_wrap_pwmSetClock(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_pwmSetClock, &p);
}



#pragma dynimport _wrap_gpioClockSet _wrap_gpioClockSet ""
extern void (*_wrap_gpioClockSet)(void*);
static void (*x_wrap_gpioClockSet)(void*) = _wrap_gpioClockSet;

void
·_swig_wrap_gpioClockSet(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_gpioClockSet, &p);
}



#pragma dynimport _wrap_waitForInterrupt_set _wrap_waitForInterrupt_set ""
extern void (*_wrap_waitForInterrupt_set)(void*);
static void (*x_wrap_waitForInterrupt_set)(void*) = _wrap_waitForInterrupt_set;

void
·_swig_wrap_waitForInterrupt_set(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_waitForInterrupt_set, &p);
}



#pragma dynimport _wrap_waitForInterrupt_get _wrap_waitForInterrupt_get ""
extern void (*_wrap_waitForInterrupt_get)(void*);
static void (*x_wrap_waitForInterrupt_get)(void*) = _wrap_waitForInterrupt_get;

void
·GetWaitForInterrupt(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_waitForInterrupt_get, &p);
}



#pragma dynimport _wrap_wiringPiISR _wrap_wiringPiISR ""
extern void (*_wrap_wiringPiISR)(void*);
static void (*x_wrap_wiringPiISR)(void*) = _wrap_wiringPiISR;

void
·WiringPiISR(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiISR, &p);
}



#pragma dynimport _wrap_piThreadCreate _wrap_piThreadCreate ""
extern void (*_wrap_piThreadCreate)(void*);
static void (*x_wrap_piThreadCreate)(void*) = _wrap_piThreadCreate;

void
·PiThreadCreate(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_piThreadCreate, &p);
}



#pragma dynimport _wrap_piLock _wrap_piLock ""
extern void (*_wrap_piLock)(void*);
static void (*x_wrap_piLock)(void*) = _wrap_piLock;

void
·_swig_wrap_piLock(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_piLock, &p);
}



#pragma dynimport _wrap_piUnlock _wrap_piUnlock ""
extern void (*_wrap_piUnlock)(void*);
static void (*x_wrap_piUnlock)(void*) = _wrap_piUnlock;

void
·_swig_wrap_piUnlock(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_piUnlock, &p);
}



#pragma dynimport _wrap_piHiPri _wrap_piHiPri ""
extern void (*_wrap_piHiPri)(void*);
static void (*x_wrap_piHiPri)(void*) = _wrap_piHiPri;

void
·PiHiPri(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_piHiPri, &p);
}



#pragma dynimport _wrap_delay _wrap_delay ""
extern void (*_wrap_delay)(void*);
static void (*x_wrap_delay)(void*) = _wrap_delay;

void
·_swig_wrap_delay(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_delay, &p);
}



#pragma dynimport _wrap_delayMicroseconds _wrap_delayMicroseconds ""
extern void (*_wrap_delayMicroseconds)(void*);
static void (*x_wrap_delayMicroseconds)(void*) = _wrap_delayMicroseconds;

void
·_swig_wrap_delayMicroseconds(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_delayMicroseconds, &p);
}



#pragma dynimport _wrap_millis _wrap_millis ""
extern void (*_wrap_millis)(void*);
static void (*x_wrap_millis)(void*) = _wrap_millis;

void
·Millis(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_millis, &p);
}



#pragma dynimport _wrap_micros _wrap_micros ""
extern void (*_wrap_micros)(void*);
static void (*x_wrap_micros)(void*) = _wrap_micros;

void
·Micros(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_micros, &p);
}



#pragma dynimport _wrap_serialOpen _wrap_serialOpen ""
extern void (*_wrap_serialOpen)(void*);
static void (*x_wrap_serialOpen)(void*) = _wrap_serialOpen;

void
·SerialOpen(struct {
  uint8 x[(2 * SWIG_PARM_SIZE) + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_serialOpen, &p);
}



#pragma dynimport _wrap_serialClose _wrap_serialClose ""
extern void (*_wrap_serialClose)(void*);
static void (*x_wrap_serialClose)(void*) = _wrap_serialClose;

void
·_swig_wrap_serialClose(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_serialClose, &p);
}



#pragma dynimport _wrap_serialFlush _wrap_serialFlush ""
extern void (*_wrap_serialFlush)(void*);
static void (*x_wrap_serialFlush)(void*) = _wrap_serialFlush;

void
·_swig_wrap_serialFlush(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_serialFlush, &p);
}



#pragma dynimport _wrap_serialPutchar _wrap_serialPutchar ""
extern void (*_wrap_serialPutchar)(void*);
static void (*x_wrap_serialPutchar)(void*) = _wrap_serialPutchar;

void
·_swig_wrap_serialPutchar(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_serialPutchar, &p);
}



#pragma dynimport _wrap_serialPuts _wrap_serialPuts ""
extern void (*_wrap_serialPuts)(void*);
static void (*x_wrap_serialPuts)(void*) = _wrap_serialPuts;

void
·_swig_wrap_serialPuts(struct {
  uint8 x[SWIG_PARM_SIZE + (2 * SWIG_PARM_SIZE)];
} p)

{
  runtime·cgocall(x_wrap_serialPuts, &p);
}



#pragma dynimport _wrap_serialPrintf _wrap_serialPrintf ""
extern void (*_wrap_serialPrintf)(void*);
static void (*x_wrap_serialPrintf)(void*) = _wrap_serialPrintf;

void
·_swig_wrap_serialPrintf(struct {
  uint8 x[SWIG_PARM_SIZE + (2 * SWIG_PARM_SIZE)];
} p)

{
  runtime·cgocall(x_wrap_serialPrintf, &p);
}



#pragma dynimport _wrap_serialDataAvail _wrap_serialDataAvail ""
extern void (*_wrap_serialDataAvail)(void*);
static void (*x_wrap_serialDataAvail)(void*) = _wrap_serialDataAvail;

void
·SerialDataAvail(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_serialDataAvail, &p);
}



#pragma dynimport _wrap_serialGetchar _wrap_serialGetchar ""
extern void (*_wrap_serialGetchar)(void*);
static void (*x_wrap_serialGetchar)(void*) = _wrap_serialGetchar;

void
·SerialGetchar(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_serialGetchar, &p);
}



#pragma dynimport _wrap_shiftOut _wrap_shiftOut ""
extern void (*_wrap_shiftOut)(void*);
static void (*x_wrap_shiftOut)(void*) = _wrap_shiftOut;

void
·_swig_wrap_shiftOut(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_shiftOut, &p);
}



#pragma dynimport _wrap_shiftIn _wrap_shiftIn ""
extern void (*_wrap_shiftIn)(void*);
static void (*x_wrap_shiftIn)(void*) = _wrap_shiftIn;

void
·ShiftIn(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_shiftIn, &p);
}



#pragma dynimport _wrap_wiringPiSPIGetFd _wrap_wiringPiSPIGetFd ""
extern void (*_wrap_wiringPiSPIGetFd)(void*);
static void (*x_wrap_wiringPiSPIGetFd)(void*) = _wrap_wiringPiSPIGetFd;

void
·WiringPiSPIGetFd(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiSPIGetFd, &p);
}



#pragma dynimport _wrap_wiringPiSPIDataRW _wrap_wiringPiSPIDataRW ""
extern void (*_wrap_wiringPiSPIDataRW)(void*);
static void (*x_wrap_wiringPiSPIDataRW)(void*) = _wrap_wiringPiSPIDataRW;

void
·WiringPiSPIDataRW(struct {
  uint8 x[SWIG_PARM_SIZE + (2 * SWIG_PARM_SIZE) + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiSPIDataRW, &p);
}



#pragma dynimport _wrap_wiringPiSPISetup _wrap_wiringPiSPISetup ""
extern void (*_wrap_wiringPiSPISetup)(void*);
static void (*x_wrap_wiringPiSPISetup)(void*) = _wrap_wiringPiSPISetup;

void
·WiringPiSPISetup(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiSPISetup, &p);
}



#pragma dynimport _wrap_wiringPiI2CSetupInterface _wrap_wiringPiI2CSetupInterface ""
extern void (*_wrap_wiringPiI2CSetupInterface)(void*);
static void (*x_wrap_wiringPiI2CSetupInterface)(void*) = _wrap_wiringPiI2CSetupInterface;

void
·WiringPiI2CSetupInterface(struct {
  uint8 x[(2 * SWIG_PARM_SIZE) + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiI2CSetupInterface, &p);
}



#pragma dynimport _wrap_wiringPiI2CSetup _wrap_wiringPiI2CSetup ""
extern void (*_wrap_wiringPiI2CSetup)(void*);
static void (*x_wrap_wiringPiI2CSetup)(void*) = _wrap_wiringPiI2CSetup;

void
·WiringPiI2CSetup(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiI2CSetup, &p);
}



#pragma dynimport _wrap_wiringPiI2CRead _wrap_wiringPiI2CRead ""
extern void (*_wrap_wiringPiI2CRead)(void*);
static void (*x_wrap_wiringPiI2CRead)(void*) = _wrap_wiringPiI2CRead;

void
·WiringPiI2CRead(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiI2CRead, &p);
}



#pragma dynimport _wrap_wiringPiI2CReadReg8 _wrap_wiringPiI2CReadReg8 ""
extern void (*_wrap_wiringPiI2CReadReg8)(void*);
static void (*x_wrap_wiringPiI2CReadReg8)(void*) = _wrap_wiringPiI2CReadReg8;

void
·WiringPiI2CReadReg8(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiI2CReadReg8, &p);
}



#pragma dynimport _wrap_wiringPiI2CReadReg16 _wrap_wiringPiI2CReadReg16 ""
extern void (*_wrap_wiringPiI2CReadReg16)(void*);
static void (*x_wrap_wiringPiI2CReadReg16)(void*) = _wrap_wiringPiI2CReadReg16;

void
·WiringPiI2CReadReg16(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiI2CReadReg16, &p);
}



#pragma dynimport _wrap_wiringPiI2CWrite _wrap_wiringPiI2CWrite ""
extern void (*_wrap_wiringPiI2CWrite)(void*);
static void (*x_wrap_wiringPiI2CWrite)(void*) = _wrap_wiringPiI2CWrite;

void
·WiringPiI2CWrite(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiI2CWrite, &p);
}



#pragma dynimport _wrap_wiringPiI2CWriteReg8 _wrap_wiringPiI2CWriteReg8 ""
extern void (*_wrap_wiringPiI2CWriteReg8)(void*);
static void (*x_wrap_wiringPiI2CWriteReg8)(void*) = _wrap_wiringPiI2CWriteReg8;

void
·WiringPiI2CWriteReg8(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiI2CWriteReg8, &p);
}



#pragma dynimport _wrap_wiringPiI2CWriteReg16 _wrap_wiringPiI2CWriteReg16 ""
extern void (*_wrap_wiringPiI2CWriteReg16)(void*);
static void (*x_wrap_wiringPiI2CWriteReg16)(void*) = _wrap_wiringPiI2CWriteReg16;

void
·WiringPiI2CWriteReg16(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_wiringPiI2CWriteReg16, &p);
}



#pragma dynimport _wrap_softToneCreate _wrap_softToneCreate ""
extern void (*_wrap_softToneCreate)(void*);
static void (*x_wrap_softToneCreate)(void*) = _wrap_softToneCreate;

void
·SoftToneCreate(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_softToneCreate, &p);
}



#pragma dynimport _wrap_softToneWrite _wrap_softToneWrite ""
extern void (*_wrap_softToneWrite)(void*);
static void (*x_wrap_softToneWrite)(void*) = _wrap_softToneWrite;

void
·_swig_wrap_softToneWrite(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_softToneWrite, &p);
}



#pragma dynimport _wrap_softServoWrite _wrap_softServoWrite ""
extern void (*_wrap_softServoWrite)(void*);
static void (*x_wrap_softServoWrite)(void*) = _wrap_softServoWrite;

void
·_swig_wrap_softServoWrite(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_softServoWrite, &p);
}



#pragma dynimport _wrap_softServoSetup _wrap_softServoSetup ""
extern void (*_wrap_softServoSetup)(void*);
static void (*x_wrap_softServoSetup)(void*) = _wrap_softServoSetup;

void
·SoftServoSetup(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_softServoSetup, &p);
}



#pragma dynimport _wrap_softPwmCreate _wrap_softPwmCreate ""
extern void (*_wrap_softPwmCreate)(void*);
static void (*x_wrap_softPwmCreate)(void*) = _wrap_softPwmCreate;

void
·SoftPwmCreate(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_softPwmCreate, &p);
}



#pragma dynimport _wrap_softPwmWrite _wrap_softPwmWrite ""
extern void (*_wrap_softPwmWrite)(void*);
static void (*x_wrap_softPwmWrite)(void*) = _wrap_softPwmWrite;

void
·_swig_wrap_softPwmWrite(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_softPwmWrite, &p);
}



#pragma dynimport _wrap_mcp23s17Setup _wrap_mcp23s17Setup ""
extern void (*_wrap_mcp23s17Setup)(void*);
static void (*x_wrap_mcp23s17Setup)(void*) = _wrap_mcp23s17Setup;

void
·Mcp23s17Setup(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_mcp23s17Setup, &p);
}



#pragma dynimport _wrap_mcp23017Setup _wrap_mcp23017Setup ""
extern void (*_wrap_mcp23017Setup)(void*);
static void (*x_wrap_mcp23017Setup)(void*) = _wrap_mcp23017Setup;

void
·Mcp23017Setup(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_mcp23017Setup, &p);
}



#pragma dynimport _wrap_mcp23s08Setup _wrap_mcp23s08Setup ""
extern void (*_wrap_mcp23s08Setup)(void*);
static void (*x_wrap_mcp23s08Setup)(void*) = _wrap_mcp23s08Setup;

void
·Mcp23s08Setup(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_mcp23s08Setup, &p);
}



#pragma dynimport _wrap_mcp23008Setup _wrap_mcp23008Setup ""
extern void (*_wrap_mcp23008Setup)(void*);
static void (*x_wrap_mcp23008Setup)(void*) = _wrap_mcp23008Setup;

void
·Mcp23008Setup(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_mcp23008Setup, &p);
}



#pragma dynimport _wrap_sr595Setup _wrap_sr595Setup ""
extern void (*_wrap_sr595Setup)(void*);
static void (*x_wrap_sr595Setup)(void*) = _wrap_sr595Setup;

void
·Sr595Setup(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_sr595Setup, &p);
}



#pragma dynimport _wrap_lcdHome _wrap_lcdHome ""
extern void (*_wrap_lcdHome)(void*);
static void (*x_wrap_lcdHome)(void*) = _wrap_lcdHome;

void
·_swig_wrap_lcdHome(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_lcdHome, &p);
}



#pragma dynimport _wrap_lcdClear _wrap_lcdClear ""
extern void (*_wrap_lcdClear)(void*);
static void (*x_wrap_lcdClear)(void*) = _wrap_lcdClear;

void
·_swig_wrap_lcdClear(struct {
  uint8 x[SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_lcdClear, &p);
}



#pragma dynimport _wrap_lcdSendCommand _wrap_lcdSendCommand ""
extern void (*_wrap_lcdSendCommand)(void*);
static void (*x_wrap_lcdSendCommand)(void*) = _wrap_lcdSendCommand;

void
·_swig_wrap_lcdSendCommand(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_lcdSendCommand, &p);
}



#pragma dynimport _wrap_lcdPosition _wrap_lcdPosition ""
extern void (*_wrap_lcdPosition)(void*);
static void (*x_wrap_lcdPosition)(void*) = _wrap_lcdPosition;

void
·_swig_wrap_lcdPosition(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_lcdPosition, &p);
}



#pragma dynimport _wrap_lcdPutchar _wrap_lcdPutchar ""
extern void (*_wrap_lcdPutchar)(void*);
static void (*x_wrap_lcdPutchar)(void*) = _wrap_lcdPutchar;

void
·_swig_wrap_lcdPutchar(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_lcdPutchar, &p);
}



#pragma dynimport _wrap_lcdPuts _wrap_lcdPuts ""
extern void (*_wrap_lcdPuts)(void*);
static void (*x_wrap_lcdPuts)(void*) = _wrap_lcdPuts;

void
·_swig_wrap_lcdPuts(struct {
  uint8 x[SWIG_PARM_SIZE + (2 * SWIG_PARM_SIZE)];
} p)

{
  runtime·cgocall(x_wrap_lcdPuts, &p);
}



#pragma dynimport _wrap_lcdPrintf _wrap_lcdPrintf ""
extern void (*_wrap_lcdPrintf)(void*);
static void (*x_wrap_lcdPrintf)(void*) = _wrap_lcdPrintf;

void
·_swig_wrap_lcdPrintf(struct {
  uint8 x[SWIG_PARM_SIZE + (2 * SWIG_PARM_SIZE)];
} p)

{
  runtime·cgocall(x_wrap_lcdPrintf, &p);
}



#pragma dynimport _wrap_lcdInit _wrap_lcdInit ""
extern void (*_wrap_lcdInit)(void*);
static void (*x_wrap_lcdInit)(void*) = _wrap_lcdInit;

void
·LcdInit(struct {
  uint8 x[SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE + SWIG_PARM_SIZE];
} p)

{
  runtime·cgocall(x_wrap_lcdInit, &p);
}



